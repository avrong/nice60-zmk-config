/*
 * Copyright (c) 2021 Nick Winans
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/reset.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define FUNCTION 1
#define NAVIGATION 2
#define LOCK 3

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
// | MO(2) |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
// |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |      SHIFT       |
// |  CTL  |  OPT  |  CMD  |             SPACE            |  CMD  |  OPT  |  MO(1)  |  CTL  |
// ------------------------------------------------------------------------------------------
			bindings = <
	&gresc          &kp N1    &kp N2    &kp N3  &kp N4  &kp N5     &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS   &kp EQUAL     &kp BSPC
	&kp TAB         &kp Q     &kp W     &kp E   &kp R   &kp T      &kp Y   &kp U   &kp I      &kp O     &kp P     &kp LBKT    &kp RBKT      &kp BSLH
	&mo NAVIGATION  &kp A     &kp S     &kp D   &kp F   &kp G      &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT                   &kp RET
	&kp LSHFT       &kp Z     &kp X     &kp C   &kp V   &kp B      &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH                            &kp RSHFT
	&kp LCTRL       &kp LALT  &kp LGUI                  &kp SPACE                  &kp RGUI                       &kp RALT    &mo FUNCTION  &kp RCTRL
			>;
		};

		function_layer {
			bindings = <
	&bt BT_CLR    &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8        &kp F9        &kp F10  &kp F11  &kp F12  &kp DEL
	&bt BT_SEL 0  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans   &trans   &trans   &kp PSCRN
	&bt BT_SEL 1  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans   &trans            &trans
	&bt BT_SEL 2  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp C_VOL_DN  &kp C_VOL_UP  &trans                     &trans
	&bt BT_SEL 3  &trans  &trans                  &trans          &trans  &trans        &trans                                   &trans
			>;
		};

		navigation_layer {
			bindings = <
	&kp GRAVE  &trans   &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans     &trans     &trans  &trans  &trans
	&trans     &trans   &trans  &trans  &trans  &trans  &trans    &trans    &kp UP    &trans     &kp PG_UP  &trans  &trans  &trans
	&trans     &trans   &trans  &trans  &trans  &trans  &kp BSPC  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN  &trans          &trans
	&trans     &trans   &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans     &trans                     &trans
	&trans     &trans   &trans                  &trans                      &trans    &trans     &trans                     &trans
			>;
		};

		lock_layer {
			bindings = <
	&none  &none   &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
	&none  &none   &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
	&none  &none   &none  &none  &none  &none  &none  &none  &none  &none  &none  &none         &none
	&none  &none   &none  &none  &none  &none  &none  &none  &none  &none  &none                &none
	&none  &none   &none                &none                &none  &none  &none                &none
			>;
		};

	};

	combos {
        compatible = "zmk,combos";

		// Lock keyboard on SUPER+ALT+FUNC+CTRL+Q
        combo_lock {
            timeout-ms = <50>;
            key-positions = <15 57 58 59 609>;
            bindings = <&tog LOCK>;
        };
    };
};